import Head from 'next/head';
import Image from 'next/image';
import type { GetStaticProps } from 'next';
import moment from 'moment';
import { Post, PrismaClient } from '@prisma/client';

import type { PostType } from '../types/post';
import styles from '@/styles/Home.module.css';

export default function Home({ posts }: Props) {
  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <ul>
          {posts.map((post) => (
            <li key={post.id}>
              {post.title} by {post.author.username} on {moment(post.createdAt).format('MMMM Do YYYY')}
            </li>
          ))}
        </ul>
      </main>

      <footer className={styles.footer}>
        <a
          href="https://vercel.com?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
          target="_blank"
          rel="noopener noreferrer"
        >
          Powered by{' '}
          <span className={styles.logo}>
            <Image src="/vercel.svg" alt="Vercel Logo" width={72} height={16} />
          </span>
        </a>
      </footer>
    </div>
  );
}

export const getStaticProps: GetStaticProps = async (ctx) => {
  const prisma = new PrismaClient();
  const posts: Post[] = await prisma.post.findMany({
    where: {
      published: true,
    },
    include: {
      author: { select: { username: true } },
    },
  });

  return {
    props: { posts },
  };
};

type Props = {
  posts: PostType[];
};
